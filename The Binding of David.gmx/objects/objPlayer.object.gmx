<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-21</depth>
  <persistent>0</persistent>
  <parentName>objUnitParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gun_image_angle = point_direction(x,y,mouse_x,mouse_y)
image_speed = 0

projectileStatus = ds_list_create()
charID = 'player'
canshoot = true;
canGetHit = true;

collectedItems = ds_list_create()

chargeshot = false
doubleshot = true
tripleshot = false
quadshot = false
spreadshot = false
lokishot = true

friction=.25

w = ord('W');
a = ord('A');
s = ord('S');
d = ord('D');

gridref = instance_nearest(x,y,objReturnPoint)
gridrefs = false

{
event_inherited();
team = 1;
}

//Pickups
coins = 0
keys = 0
powder = 0
bombs = 0

//Stat defaults
hp = 100;
damage = 10;
damageBoost = 1;
damagemultiplier = 1;
firingrate = 1;
firingratedecrease = 1;
shotspeed = 7;
finalrecoil = 0;
recoilamplifier = 1;
maxspeed = 2;
stdspeed = 2;
acceleration = 0.5;
stdacc = 0.5;
luck = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canGetHit = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canshoot = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_snap(1,1)
if speed&gt;maxspeed{speed=maxspeed}
if speed&lt;-maxspeed{speed=-maxspeed}
if hp&lt;0{game_restart()}

if keyboard_check(w){vspeed-=(acceleration)}
if keyboard_check(s){vspeed+=(acceleration)}
if keyboard_check(a){hspeed-=(acceleration)}
if keyboard_check(d){hspeed+=(acceleration)}

if place_meeting(x,y,objInviswall)
{
gridref = instance_nearest(x,y,objReturnPoint)
gridrefs = true
}

gun_image_angle=point_direction(x,y,mouse_x,mouse_y)

scrParticles()
scrWeapon()

var xmot, ymot;
x = xprevious;y = yprevious
for (i=0; i&lt;90; i+=1){
  xmot=x+lengthdir_x(speed,direction+i)
  ymot=y+lengthdir_y(speed,direction+i)
  if place_free(xmot,ymot){x = xmot;y = ymot;exit}
  xmot=x+lengthdir_x(speed,direction-i)
  ymot=y+lengthdir_y(speed,direction-i)
  if place_free(xmot, ymot){x = xmot;y = ymot;exit}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd = point_distance(xprevious,yprevious,x,y);
dir = point_direction(xprevious,yprevious,x,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyProjectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other)
    {
    i = instance_create(x,y,objProjBlast)
    i.image_blend = image_blend
    instance_destroy()
    }
scrHit()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemybase">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrHit()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objUnitParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
//Movement stuff. Stay away from walls!
x += lengthdir_x(maxspeed,point_direction(other.x+16,other.y+16,x,y)-5+random(10));
y += lengthdir_y(maxspeed,point_direction(other.x+16,other.y+16,x,y)-5+random(10));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Player

if mouse_y &lt; objPlayer.y
    {
    draw_sprite_ext(sprGun,0,x,y,image_xscale,image_yscale,gun_image_angle,image_blend,image_alpha)
    }

if mouse_x &gt; objPlayer.x
    {
    draw_sprite_ext(sprPlayer,0,x,y,image_xscale,image_yscale,0,image_blend,image_alpha)
    }
else
    {
    draw_sprite_ext(sprPlayer,1,x,y,image_xscale,image_yscale,0,image_blend,image_alpha)
    }

if mouse_y &gt;= objPlayer.y
    {
    draw_sprite_ext(sprGun,0,x,y,image_xscale,image_yscale,gun_image_angle,image_blend,image_alpha)
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
