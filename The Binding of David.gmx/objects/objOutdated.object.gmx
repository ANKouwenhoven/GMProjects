<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_list_find_index(dropStatus,'key') != -1
    {
    key = instance_create(x,y,objPickup)
    pickupID = 0
    key.pickupID = pickupID
    key.image_index = pickupID
    }
if ds_list_find_index(dropStatus,'coin') != -1
    {
    coin = instance_create(x,y,objPickup)
    pickupID = 1
    coin.pickupID = pickupID
    coin.image_index = pickupID
    }
if ds_list_find_index(dropStatus,'powder') != -1
    {
    powder = instance_create(x,y,objPickup)
    pickupID = 2
    powder.pickupID = pickupID
    powder.image_index = pickupID
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_clear(mobStatus)
ds_list_copy(mobStatus,backupStatus)
image_index = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objProjectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objProjectile)
    {
    collidedshot = instance_nearest(x,y,objProjectile)

    if collidedshot.can_hit = true
    {
        finaldamage = collidedshot.damage
        if ds_list_find_index(targetingStatus,'wispTarget') != -1
            {
            finaldamage = 2*collidedshot.damage
            for ( i = 0; i &lt; irandom(0.5*finaldamage); i += 1)
                {
                spark = instance_create(x,y,objSparkle)
                spark.direction = random(360)
                spark.speed = random(0.8)
                }
            }
        hp -= finaldamage
        with(collidedshot)instance_create(x,y,objSmoke)
        image_index = 1
        collidedshot.can_hit = false
        collidedshot.alarm[1]=5
        alarm[2] = 3
        if ds_list_find_index(collidedshot.currentStatus,'homing') != -1
            {
            ds_list_delete(collidedshot.currentStatus,'homing')
            }
        if ds_list_find_index(collidedshot.currentStatus,'freezing') != -1 &amp;&amp; ds_list_find_index(mobStatus,'frozen') == -1
            {
            if ds_list_find_index(mobStatus,'frozen') == -1 ds_list_copy(backupStatus,mobStatus)
            ds_list_add(mobStatus,'frozen')
            }
        if ds_list_find_index(collidedshot.currentStatus,'slowing') != -1 &amp;&amp; ds_list_find_index(mobStatus,'slowed') == -1
            {
            ds_list_add(mobStatus,'slowed')
            }
    }
    if ds_list_find_index(collidedshot.currentStatus,'piercing') == -1
        {
        with(other)
        instance_destroy()
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objOutdated">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir;
dir=point_direction(x,y,other.x,other.y)-180

x+=lengthdir_x(1,dir)
y+=lengthdir_y(1,dir)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir;
dir=point_direction(x,y,other.x,other.y)-180

x+=lengthdir_x(1,dir)
y+=lengthdir_y(1,dir)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
